name: g-fortress

services:
  api:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile
    container_name: fastapi-application
    entrypoint: /app/docker/entrypoint-api.sh
    depends_on:
      neo4j:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    ports:
      - '8000:8000'
    env_file:
      - .env
    
  node:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
      target: dev
    working_dir: /app
    tty: true
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    command: sh -lc "corepack enable || true; tail -f /dev/null"
    ports:
      - "5173:5173"
    depends_on:
      - api

  web:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
      target: nginx
    ports:
      - "80:80"
    depends_on:
      - api

  neo4j:
    image: neo4j:5.26
    container_name: neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/Test123456789!
    ports:
      - "7474:7474" # Web Admin Interface
      - "7687:7687" # Bolt
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 1s
      timeout: 5s
      retries: 20
      start_period: 3s

  redis:
    image: redis:alpine
    container_name: redis

  worker:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile
    container_name: worker
    entrypoint: /app/docker/entrypoint-celery-worker.sh
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    depends_on:
      - redis
      - api
    restart: unless-stopped
    env_file:
      - .env

  beat:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile
    container_name: beat
    entrypoint: /app/docker/entrypoint-celery-beat.sh
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    depends_on:
      - redis
      - api
    restart: unless-stopped
    env_file:
      - .env

volumes:
  node_modules: